# Generated by Django 5.2.4 on 2025-08-01 01:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhysicalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Test Name')),
                ('unit', models.CharField(max_length=20, verbose_name='Unit')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Physical Test',
                'verbose_name_plural': 'Physical Tests',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.CharField(max_length=20, verbose_name='Roll Number')),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('height', models.FloatField(verbose_name='Height (inches)')),
                ('weight', models.FloatField(verbose_name='Weight (kg)')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Age')),
                ('bmi', models.FloatField(blank=True, null=True, verbose_name='BMI')),
                ('bmi_category', models.CharField(blank=True, choices=[('underweight', 'Underweight'), ('healthy', 'Healthy'), ('overweight', 'Overweight'), ('obese', 'Obese')], max_length=20, verbose_name='BMI Category')),
                ('percentile', models.CharField(blank=True, max_length=50, verbose_name='Percentile')),
                ('performance_group', models.IntegerField(blank=True, null=True, verbose_name='Performance Group')),
                ('overall_comment', models.TextField(blank=True, verbose_name='Overall Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='schools.class', verbose_name='Class')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['class_assigned', 'roll_number'],
                'unique_together': {('class_assigned', 'roll_number')},
            },
        ),
        migrations.CreateModel(
            name='StudentTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='Score')),
                ('percentile', models.CharField(blank=True, max_length=50, verbose_name='Percentile')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('test_date', models.DateField(auto_now_add=True, verbose_name='Test Date')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='students.student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.physicaltest')),
            ],
            options={
                'verbose_name': 'Test Result',
                'verbose_name_plural': 'Test Results',
                'ordering': ['student', 'test'],
                'unique_together': {('student', 'test')},
            },
        ),
    ]
